diff --git a/css/styles.css b/css/styles.css
index 2e08e79..d31dd39 100644
--- a/css/styles.css
+++ b/css/styles.css
@@ -1,13 +1,69 @@
+/* Loading Screen */
+.loading-screen {
+    position: fixed;
+    top: 0;
+    left: 0;
+    width: 100%;
+    height: 100%;
+    background: var(--background-purple);
+    display: flex;
+    justify-content: center;
+    align-items: center;
+    z-index: 9999;
+    transition: opacity 0.5s ease-out, visibility 0.5s ease-out;
+}
+
+.loading-screen.hidden {
+    opacity: 0;
+    visibility: hidden;
+}
+
+.loading-content {
+    text-align: center;
+    color: var(--text-lavender);
+}
+
+.loading-spinner {
+    width: 40px;
+    height: 40px;
+    border: 3px solid rgba(200, 191, 224, 0.3);
+    border-top: 3px solid var(--accent-glow);
+    border-radius: 50%;
+    animation: spin 1s linear infinite;
+    margin: 0 auto 20px;
+}
+
+@keyframes spin {
+    0% { transform: rotate(0deg); }
+    100% { transform: rotate(360deg); }
+}
+
+.loading-text {
+    font-size: 1em;
+    color: var(--text-lavender);
+    animation: pulse 2s ease-in-out infinite;
+}
+
+@keyframes pulse {
+    0%, 100% { opacity: 0.6; }
+    50% { opacity: 1; }
+}
+
 /*-- Color Palette based on your images --*/
 :root {
     --background-purple: #4a3d66;
     --text-lavender: #c8bfe0;
     --container-dark-purple: #3a2f51;
     --accent-glow: #e0d8f5;
+    --gradient-1: #4a3d66;
+    --gradient-2: #5a4d76;
+    --gradient-3: #3a2f51;
 }
 
 body {
-    background-color: var(--background-purple);
+    background: linear-gradient(-45deg, var(--gradient-1), var(--gradient-2), var(--gradient-3), var(--gradient-1));
+    background-size: 400% 400%;
+    animation: gradientShift 15s ease infinite;
     font-family: 'Poppins', sans-serif;
     color: var(--text-lavender);
     text-align: center;
@@ -15,41 +71,97 @@ body {
     padding: 20px;
     -webkit-font-smoothing: antialiased; /* Makes font look smoother */
     -moz-osx-font-smoothing: grayscale;
+    min-height: 100vh;
+}
+
+@keyframes gradientShift {
+    0% { background-position: 0% 50%; }
+    50% { background-position: 100% 50%; }
+    100% { background-position: 0% 50%; }
 }
 
 /* This is the main container */
 .main-container {
     max-width: 600px;
     margin: 20px auto;
-    background-color: var(--container-dark-purple);
-    border: 1px solid var(--accent-glow);
-    box-shadow: 0 0 25px rgba(200, 191, 224, 0.1);
-    border-radius: 15px; /* Softer, more rounded corners */
+    background: rgba(58, 47, 81, 0.95);
+    backdrop-filter: blur(10px);
+    border: 1px solid rgba(224, 216, 245, 0.2);
+    box-shadow: 
+        0 0 25px rgba(200, 191, 224, 0.1),
+        0 8px 32px rgba(0, 0, 0, 0.3);
+    border-radius: 20px;
     overflow: hidden;
+    position: relative;
+    animation: fadeInUp 0.8s ease-out;
+}
+
+@keyframes fadeInUp {
+    from {
+        opacity: 0;
+        transform: translateY(30px);
+    }
+    to {
+        opacity: 1;
+        transform: translateY(0);
+    }
+}
+
+@keyframes pfpEntrance {
+    0% {
+        opacity: 0;
+        transform: translateY(-30px) scale(0.8) rotate(-10deg);
+    }
+    50% {
+        opacity: 0.8;
+        transform: translateY(5px) scale(1.05) rotate(2deg);
+    }
+    100% {
+        opacity: 1;
+        transform: translateY(0) scale(1) rotate(0deg);
+    }
 }
 
 .content {
-    padding: 30px;
+    padding: 40px 30px;
+    position: relative;
 }
 
 /* Style for profile picture */
 .pfp {
     width: 120px;
     height: 120px;
-    border-radius: 50%; /* Makes it a circle */
-    border: 3px solid var(--text-lavender); /* Solid, clean border */
+    border-radius: 50%;
+    border: 3px solid var(--text-lavender);
     padding: 4px;
-    background-color: var(--background-purple);
+    background: var(--background-purple);
     margin-bottom: 20px;
+    transition: border-color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease;
+    opacity: 0;
+    animation: pfpEntrance 1s ease-out 0.2s forwards;
+    /* Debug: Add a border to see if the element is visible */
+    /* border: 2px solid red; */
+}
+
+.pfp:hover {
+    border-color: var(--accent-glow);
+    box-shadow: 0 0 20px rgba(224, 216, 245, 0.4);
+    transform: translateY(-5px) scale(1.05);
 }
 
 /* name/handle with a soft glow */
 h1 {
     color: var(--accent-glow);
-    text-shadow: 0 0 10px rgba(224, 216, 245, 0.5); /* Soft glow instead of hard shadow */
+    text-shadow: 0 0 10px rgba(224, 216, 245, 0.5);
     margin: 0 0 10px 0;
     font-size: 2.5em;
     font-weight: 700;
+    animation: textGlow 2s ease-in-out infinite alternate;
+}
+
+@keyframes textGlow {
+    from { text-shadow: 0 0 10px rgba(224, 216, 245, 0.5); }
+    to { text-shadow: 0 0 20px rgba(224, 216, 245, 0.8); }
 }
 
 /* Bio text */
@@ -58,45 +170,97 @@ h1 {
     color: var(--text-lavender);
     line-height: 1.6;
     max-width: 450px;
-    margin: 0 auto 30px auto; /* Center the bio text container */
+    margin: 0 auto 30px auto;
+    opacity: 0;
+    animation: fadeIn 1s ease-out 0.3s forwards;
+}
+
+@keyframes fadeIn {
+    to { opacity: 1; }
 }
 
 /* The container for all your links */
 .links-container {
     display: flex;
     flex-direction: column;
-    gap: 15px; /* Space between the links */
+    gap: 15px;
     margin-top: 20px;
 }
 
 /* Styling for each individual link */
 .link-button {
-    background-color: transparent;
+    background: rgba(200, 191, 224, 0.05);
     color: var(--text-lavender);
     text-decoration: none;
-    padding: 15px;
-    border: 2px solid var(--text-lavender);
-    border-radius: 50px; /* Pill-shaped buttons */
-    transition: all 0.3s ease;
+    padding: 16px 20px;
+    border: 2px solid rgba(200, 191, 224, 0.3);
+    border-radius: 50px;
+    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
     font-weight: 700;
     letter-spacing: 1px;
+    position: relative;
+    overflow: hidden;
     
-    /* CSS FOR ICON ALIGNMENT */
     display: flex;
     align-items: center;
     justify-content: center;
-    gap: 10px; /* Adds space between the icon and text */
+    gap: 10px;
+    
+    opacity: 0;
+    animation: slideInUp 0.6s ease-out forwards;
+}
+
+.link-button:nth-child(1) { animation-delay: 0.4s; }
+.link-button:nth-child(2) { animation-delay: 0.5s; }
+.link-button:nth-child(3) { animation-delay: 0.6s; }
+.link-button:nth-child(4) { animation-delay: 0.7s; }
+.link-button:nth-child(5) { animation-delay: 0.8s; }
+
+@keyframes slideInUp {
+    from {
+        opacity: 0;
+        transform: translateY(20px);
+    }
+    to {
+        opacity: 1;
+        transform: translateY(0);
+    }
+}
+
+.link-button::before {
+    content: '';
+    position: absolute;
+    top: 0;
+    left: -100%;
+    width: 100%;
+    height: 100%;
+    background: linear-gradient(90deg, transparent, rgba(224, 216, 245, 0.2), transparent);
+    transition: left 0.5s;
+}
+
+.link-button:hover::before {
+    left: 100%;
 }
 
 .link-button .fab, .link-button .fas {
-    font-size: 1.2em; /* Makes icons slightly bigger */
+    font-size: 1.2em;
+    transition: transform 0.3s ease;
 }
 
 /* What happens when you hover over a link */
 .link-button:hover {
-    background-color: var(--text-lavender);
-    color: var(--container-dark-purple);
-    box-shadow: 0 0 15px rgba(200, 191, 224, 0.4);
+    background: rgba(200, 191, 224, 0.1);
+    color: var(--accent-glow);
+    border-color: var(--accent-glow);
+    box-shadow: 
+        0 0 20px rgba(224, 216, 245, 0.3),
+        0 4px 15px rgba(0, 0, 0, 0.2);
+    transform: translateY(-2px);
+}
+
+.link-button:hover .fab,
+.link-button:hover .fas {
+    transform: scale(1.1);
 }
 
 /* Focus styles for accessibility */
@@ -110,4 +274,117 @@ h1 {
     margin-top: 40px;
     font-size: 0.8em;
     color: rgba(200, 191, 224, 0.6);
+    opacity: 0;
+    animation: fadeIn 1s ease-out 1s forwards;
+}
+
+.footer-content {
+    display: flex;
+    flex-direction: column;
+    gap: 20px;
+    align-items: center;
+}
+
+.footer-stats {
+    display: flex;
+    gap: 30px;
+    justify-content: center;
+    flex-wrap: wrap;
+}
+
+.stat {
+    display: flex;
+    flex-direction: column;
+    align-items: center;
+    gap: 5px;
+    padding: 10px;
+    border-radius: 10px;
+    background: rgba(200, 191, 224, 0.05);
+    border: 1px solid rgba(200, 191, 224, 0.1);
+    transition: all 0.3s ease;
+    min-width: 80px;
+}
+
+.stat:hover {
+    background: rgba(200, 191, 224, 0.1);
+    border-color: rgba(200, 191, 224, 0.2);
+    transform: translateY(-2px);
+}
+
+.stat i {
+    font-size: 1.2em;
+    color: var(--accent-glow);
+    margin-bottom: 5px;
+}
+
+.stat-number {
+    font-size: 1.5em;
+    font-weight: 700;
+    color: var(--accent-glow);
+    transition: all 0.3s ease;
+}
+
+.stat-label {
+    font-size: 0.7em;
+    color: var(--text-lavender);
+    text-transform: uppercase;
+    letter-spacing: 1px;
+}
+
+.footer-text {
+    text-align: center;
+    line-height: 1.6;
+}
+
+.footer-text p {
+    margin: 5px 0;
+}
+
+.footer-text .fa-heart {
+    color: #ff6b6b;
+    animation: heartbeat 2s ease-in-out infinite;
+}
+
+@keyframes heartbeat {
+    0%, 100% { transform: scale(1); }
+    50% { transform: scale(1.1); }
+}
+
+.footer-year {
+    font-size: 0.9em;
+    opacity: 0.8;
+}
+
+/* Responsive improvements */
+@media (max-width: 768px) {
+    .main-container {
+        margin: 10px;
+        border-radius: 15px;
+    }
+    
+    .content {
+        padding: 30px 20px;
+    }
+    
+    h1 {
+        font-size: 2em;
+    }
+    
+    .pfp {
+        width: 100px;
+        height: 100px;
+    }
+    
+    .footer-stats {
+        gap: 15px;
+    }
+    
+    .stat {
+        min-width: 70px;
+        padding: 8px;
+    }
+    
+    .stat-number {
+        font-size: 1.3em;
+    }
 }
diff --git a/index.html b/index.html
index 8d4dc34..458e2c9 100644
--- a/index.html
+++ b/index.html
@@ -39,6 +39,14 @@
 </head>
 <body>
 
+    <!-- Loading Screen -->
+    <div class="loading-screen" id="loadingScreen">
+        <div class="loading-content">
+            <div class="loading-spinner"></div>
+            <p class="loading-text">Loading...</p>
+        </div>
+    </div>
+
     <!-- This is where page content goes -->
     <div class="main-container">
 
@@ -67,7 +75,7 @@
                 </a>
                 <a href="https://twitch.tv/ZephByte" class="link-button">
                     <i class="fab fa-twitch"></i>
-                    <span>Twitch</span>
+                    <span>Twitch</span>ß
                 </a>
                 <a href="https://tiktok.com/@zephbyt" class="link-button">
                     <i class="fab fa-tiktok"></i>
@@ -79,6 +87,33 @@
                 </a>
             </div>
 
+            <!-- Subtle footer with stats -->
+            <div class="footer">
+                <div class="footer-content">
+                    <div class="footer-stats">
+                        <span class="stat">
+                            <i class="fas fa-code"></i>
+                            <span class="stat-number" data-target="50">0</span>
+                            <span class="stat-label">Projects</span>
+                        </span>
+                        <span class="stat">
+                            <i class="fas fa-users"></i>
+                            <span class="stat-number" data-target="1000">0</span>
+                            <span class="stat-label">Followers</span>
+                        </span>
+                        <span class="stat">
+                            <i class="fas fa-gamepad"></i>
+                            <span class="stat-number" data-target="25">0</span>
+                            <span class="stat-label">Mods</span>
+                        </span>
+                    </div>
+                    <div class="footer-text">
+                        <p>Made with <i class="fas fa-heart"></i> and lots of coffee</p>
+                        <p class="footer-year">© 2024 ZephByte</p>
+                    </div>
+                </div>
+            </div>
+
         </div>
     </div>
 
diff --git a/js/main.js b/js/main.js
index 9933ab9..e193909 100644
--- a/js/main.js
+++ b/js/main.js
@@ -1,7 +1,76 @@
 // Main JavaScript file for ZephByte's website
-// Add any interactive features here
+// Enhanced with sophisticated interactions and effects
 
 document.addEventListener('DOMContentLoaded', function() {
+    // Initialize all interactive features
+    initializeAnimations();
+    initializeParallax();
+    initializeLinkEffects();
+    initializePerformanceOptimizations();
+    initializeStatsCounter();
+    initializeLoadingScreen();
+    initializeProfileFloat();
+});
+
+function initializeProfileFloat() {
+    const pfp = document.querySelector('.pfp');
+    if (!pfp) return;
+    
+    let isHovered = false;
+    let floatDirection = 1;
+    let currentY = 0;
+    let animationStarted = false;
+    
+    // Wait for CSS animation to complete before starting float
+    setTimeout(() => {
+        animationStarted = true;
+    }, 1200); // Wait for pfpEntrance animation to complete
+    
+    // Handle hover state
+    pfp.addEventListener('mouseenter', () => {
+        isHovered = true;
+    });
+    
+    pfp.addEventListener('mouseleave', () => {
+        isHovered = false;
+    });
+    
+    // Floating animation
+    function animateFloat() {
+        if (!isHovered && animationStarted) {
+            currentY += 0.1 * floatDirection;
+            
+            if (currentY >= 5) {
+                floatDirection = -1;
+            } else if (currentY <= -5) {
+                floatDirection = 1;
+            }
+            
+            pfp.style.transform = `translateY(${currentY}px)`;
+        }
+        
+        requestAnimationFrame(animateFloat);
+    }
+    
+    animateFloat();
+}
+
+function initializeLoadingScreen() {
+    const loadingScreen = document.getElementById('loadingScreen');
+    
+    // Hide loading screen after page is fully loaded
+    window.addEventListener('load', function() {
+        setTimeout(() => {
+            loadingScreen.classList.add('hidden');
+            // Remove from DOM after animation
+            setTimeout(() => {
+                loadingScreen.remove();
+            }, 500);
+        }, 1000); // Show loading for at least 1 second
+    });
+}
+
+function initializeAnimations() {
     // Add smooth scrolling for any anchor links
     document.querySelectorAll('a[href^="#"]').forEach(anchor => {
         anchor.addEventListener('click', function (e) {
@@ -15,15 +84,195 @@ document.addEventListener('DOMContentLoaded', function() {
         });
     });
 
-    // Add loading animation for images
-    const images = document.querySelectorAll('img');
-    images.forEach(img => {
+    // Enhanced image loading with progressive reveal
+    const images = document.querySelectorAll('img:not(.pfp)');
+    images.forEach((img, index) => {
         img.addEventListener('load', function() {
             this.style.opacity = '1';
+            this.style.transform = 'scale(1)';
         });
         
-        // Set initial opacity for fade-in effect
+        // Progressive loading effect
         img.style.opacity = '0';
-        img.style.transition = 'opacity 0.3s ease-in-out';
+        img.style.transform = 'scale(0.95)';
+        img.style.transition = `opacity 0.6s ease-out ${index * 0.1}s, transform 0.6s ease-out ${index * 0.1}s`;
     });
-});
+
+    // Add intersection observer for scroll-triggered animations
+    const observerOptions = {
+        threshold: 0.1,
+        rootMargin: '0px 0px -50px 0px'
+    };
+
+    const observer = new IntersectionObserver((entries) => {
+        entries.forEach(entry => {
+            if (entry.isIntersecting) {
+                entry.target.classList.add('animate-in');
+            }
+        });
+    }, observerOptions);
+
+    // Observe elements for animation
+    document.querySelectorAll('.link-button, .bio').forEach(el => {
+        observer.observe(el);
+    });
+}
+
+function initializeParallax() {
+    // Subtle parallax effect on scroll
+    let ticking = false;
+    
+    function updateParallax() {
+        const scrolled = window.pageYOffset;
+        const rate = scrolled * -0.5;
+        
+        const mainContainer = document.querySelector('.main-container');
+        if (mainContainer) {
+            mainContainer.style.transform = `translateY(${rate}px)`;
+        }
+        
+        ticking = false;
+    }
+    
+    function requestTick() {
+        if (!ticking) {
+            requestAnimationFrame(updateParallax);
+            ticking = true;
+        }
+    }
+    
+    window.addEventListener('scroll', requestTick);
+}
+
+function initializeLinkEffects() {
+    // Enhanced link interactions with ripple effect
+    document.querySelectorAll('.link-button').forEach(button => {
+        button.addEventListener('click', function(e) {
+            // Create ripple effect
+            const ripple = document.createElement('span');
+            const rect = this.getBoundingClientRect();
+            const size = Math.max(rect.width, rect.height);
+            const x = e.clientX - rect.left - size / 2;
+            const y = e.clientY - rect.top - size / 2;
+            
+            ripple.style.width = ripple.style.height = size + 'px';
+            ripple.style.left = x + 'px';
+            ripple.style.top = y + 'px';
+            ripple.classList.add('ripple');
+            
+            this.appendChild(ripple);
+            
+            // Remove ripple after animation
+            setTimeout(() => {
+                ripple.remove();
+            }, 600);
+        });
+
+        // Add magnetic effect on hover
+        button.addEventListener('mousemove', function(e) {
+            const rect = this.getBoundingClientRect();
+            const x = e.clientX - rect.left - rect.width / 2;
+            const y = e.clientY - rect.top - rect.height / 2;
+            
+            this.style.transform = `translate(${x * 0.1}px, ${y * 0.1}px)`;
+        });
+
+        button.addEventListener('mouseleave', function() {
+            this.style.transform = 'translate(0, 0)';
+        });
+    });
+}
+
+function initializeStatsCounter() {
+    // Animated stats counter
+    const stats = document.querySelectorAll('.stat-number');
+    
+    const statsObserver = new IntersectionObserver((entries) => {
+        entries.forEach(entry => {
+            if (entry.isIntersecting) {
+                const target = parseInt(entry.target.getAttribute('data-target'));
+                animateCounter(entry.target, target);
+                statsObserver.unobserve(entry.target);
+            }
+        });
+    }, { threshold: 0.5 });
+    
+    stats.forEach(stat => {
+        statsObserver.observe(stat);
+    });
+}
+
+function animateCounter(element, target) {
+    let current = 0;
+    const increment = target / 50; // Animate over 50 steps
+    const timer = setInterval(() => {
+        current += increment;
+        if (current >= target) {
+            current = target;
+            clearInterval(timer);
+        }
+        element.textContent = Math.floor(current);
+    }, 30);
+}
+
+function initializePerformanceOptimizations() {
+    // Preload critical resources
+    const criticalImages = [
+        'assets/images/pfp.png',
+        'assets/images/favicon.ico'
+    ];
+    
+    criticalImages.forEach(src => {
+        const link = document.createElement('link');
+        link.rel = 'preload';
+        link.as = 'image';
+        link.href = src;
+        document.head.appendChild(link);
+    });
+
+    // Add loading state management
+    window.addEventListener('load', function() {
+        document.body.classList.add('loaded');
+    });
+
+    // Optimize scroll performance
+    let scrollTimeout;
+    window.addEventListener('scroll', function() {
+        if (scrollTimeout) {
+            clearTimeout(scrollTimeout);
+        }
+        
+        scrollTimeout = setTimeout(() => {
+            // Perform any scroll-based optimizations here
+        }, 100);
+    });
+}
+
+// Add CSS for ripple effect
+const style = document.createElement('style');
+style.textContent = `
+    .ripple {
+        position: absolute;
+        border-radius: 50%;
+        background: rgba(224, 216, 245, 0.3);
+        transform: scale(0);
+        animation: ripple-animation 0.6s linear;
+        pointer-events: none;
+    }
+    
+    @keyframes ripple-animation {
+        to {
+            transform: scale(4);
+            opacity: 0;
+        }
+    }
+    
+    .animate-in {
+        animation: slideInUp 0.6s ease-out forwards;
+    }
+    
+    body.loaded .main-container {
+        animation: none;
+    }
+`;
+document.head.appendChild(style);
